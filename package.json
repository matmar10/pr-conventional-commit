{
  "name": "prcolinter",
  "version": "1.1.3",
  "description": "Easily lint each commit for your PRs against the Conventional Commit spec based on configurable Linter rules.",
  "main": "index.js",
  "scripts": {
    "build": "ncc build index.js",
    "release": "release-it --ci",
    "prerelease": "npm run build",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "Matthew J Martin <matthew.mar10@gmail.com>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git@github.com:matmar10/prcolinter.git"
  },
  "keywords": [
    "Github",
    "Actions",
    "Github Actions",
    "Workflow",
    "Github Workflow",
    "Conventional Commit",
    "Commit Messages",
    "Lint",
    "Check",
    "Enforce",
    "Code Quality"
  ],
  "devDependencies": {
    "@release-it/conventional-changelog": "^3.3.0",
    "@zeit/ncc": "^0.22.3",
    "eslint": "^5.16.0",
    "eslint-plugin-es-beautifier": "^1.0.1",
    "release-it": "^14.11.6"
  },
  "dependencies": {
    "@actions/core": "^1.6.0",
    "@actions/github": "^5.0.0",
    "@commitlint/config-conventional": "^13.2.0",
    "@commitlint/lint": "^13.2.0",
    "moment": "^2.29.1"
  },
  "release-it": {
    "ci": true,
    "plugins": {
      "@release-it/conventional-changelog": {
        "infile": "CHANGELOG.md",
        "preset": {
          "name": "conventionalcommits",
          "types": [
            {
              "type": "feat",
              "section": "Features"
            },
            {
              "type": "fix",
              "section": "Bug Fixes"
            },
            {
              "type": "perf",
              "section": "Performance Improvements"
            },
            {
              "type": "revert",
              "section": "Reverts"
            },
            {
              "type": "docs",
              "section": "Documentation"
            },
            {
              "type": "style",
              "section": "Styles"
            },
            {
              "type": "refactor",
              "section": "Code Refactoring"
            },
            {
              "type": "test",
              "section": "Tests"
            },
            {
              "type": "build",
              "section": "Build System"
            },
            {
              "type": "ci",
              "section": "Continuous Integration"
            }
          ]
        }
      }
    },
    "git": {
      "commit": true,
      "tag": true,
      "push": true,
      "requireUpstream": false
    },
    "github": {
      "release": true
    },
    "npm": {
      "publish": true
    }
  }
}
